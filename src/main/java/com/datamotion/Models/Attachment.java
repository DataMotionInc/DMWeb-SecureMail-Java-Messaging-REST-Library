package com.datamotion.Models;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import com.datamotion.DMWeb;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Attachment Model Class
 */
@NoArgsConstructor
@AllArgsConstructor
public class Attachment {	
	/**
	 * Attachment Base64 string
	 */
	@JsonProperty("AttachmentBase64") @Getter @Setter
	private String AttachmentBase64;
	
	/**
	 * Attachment MIME Content Type tag
	 */
	@JsonProperty("ContentType") @Getter @Setter
	private String ContentType;
	
	/**
	 * Attachment Filename
	 */
	@JsonProperty("FileName") @Getter @Setter
	private String FileName;
	
	/**
	 * Attachment byte array, generated when attachment is mapped through the constructor
	 */
/*	@Getter @Setter
	private byte[] Bytes;
*/	
	public Attachment(File file) {
		DMWeb dmweb = new DMWeb();
		try {
			AttachmentBase64 = dmweb.encodeFileToBase64Binary(file);
			ContentType = Files.probeContentType(file.toPath());
			FileName = file.getName();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	/**
	 * Constructor, maps input to class fields and generated byte array from Base64 string
	 * @param AB64 <code>String</code> Base64 string
	 * @param CT <code>String</code> MIME content type
	 * @param FN <code>String</code> file name
	 */
/*	@JsonCreator
	public Attachment(@JsonProperty("AttachmentBase64") String AB64,
			@JsonProperty("ContentType") String CT,
			@JsonProperty("FileName") String FN) {
		AttachmentBase64 = AB64;
		ContentType = CT;
		FN = FileName;
		DMWeb dmweb = new DMWeb();
		Bytes = dmweb.decodeBase64ToByteArray(AB64);
	}*/
}
